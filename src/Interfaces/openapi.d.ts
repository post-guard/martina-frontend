/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/airConditioner/airConditionerRecords": {
    /** 查询空调详单 */
    get: {
      parameters: {
        query?: {
          roomId?: string;
          beginTime?: number;
          endTime?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AirConditionerRecordResponse"][];
            "application/json": components["schemas"]["AirConditionerRecordResponse"][];
            "text/json": components["schemas"]["AirConditionerRecordResponse"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/airConditioner/{roomId}": {
    /**
     * 发起空调服务请求
     * @description 要求发起请求的用户是当前房间的住户
     */
    post: {
      parameters: {
        path: {
          roomId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AirConditionerRequest"];
          "text/json": components["schemas"]["AirConditionerRequest"];
          "application/*+json": components["schemas"]["AirConditionerRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/airConditionerManage": {
    /**
     * 获得空调系统的配置信息
     * @description 当空调系统尚未开启时返回400
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AirConditionerOption"];
            "application/json": components["schemas"]["AirConditionerOption"];
            "text/json": components["schemas"]["AirConditionerOption"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
    /**
     * 修改空调系统的配置信息
     * @description 当空调系统尚未开启时返回400
     */
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AirConditionerOption"];
          "text/json": components["schemas"]["AirConditionerOption"];
          "application/*+json": components["schemas"]["AirConditionerOption"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AirConditionerOption"];
            "application/json": components["schemas"]["AirConditionerOption"];
            "text/json": components["schemas"]["AirConditionerOption"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/airConditionerManage/open": {
    /** 开启空调系统 */
    put: {
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/airConditionerManage/close": {
    /** 关闭空调系统 */
    put: {
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/airConditionerManage/reset": {
    /**
     * 重置空调系统为初始状态
     * @description 空调系统尚未开启时返回400
     */
    post: {
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/bill": {
    /** 查询符合条件的账单 */
    get: {
      parameters: {
        query?: {
          userId?: string;
          roomId?: string;
          beginTime?: number;
          endTime?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BillResponse"][];
            "application/json": components["schemas"]["BillResponse"][];
            "text/json": components["schemas"]["BillResponse"][];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/bill/{id}": {
    /** 获取指定的账单ID */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BillResponse"];
            "application/json": components["schemas"]["BillResponse"];
            "text/json": components["schemas"]["BillResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/bill/preview": {
    /** 获得预览的账单 */
    post: {
      requestBody?: {
        content: {
          "application/json": string[];
          "text/json": string[];
          "application/*+json": string[];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BillResponse"];
            "application/json": components["schemas"]["BillResponse"];
            "text/json": components["schemas"]["BillResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/bill/checkout": {
    /** 结账 */
    post: {
      requestBody?: {
        content: {
          "application/json": string[];
          "text/json": string[];
          "application/*+json": string[];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BillResponse"];
            "application/json": components["schemas"]["BillResponse"];
            "text/json": components["schemas"]["BillResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/checkin": {
    /**
     * 查询所有的入住记录
     * @description 需要房间管理员及以上的权限
     */
    get: {
      parameters: {
        query?: {
          roomId?: string;
          userId?: string;
          beginTime?: number;
          endTime?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CheckinResponse"][];
            "application/json": components["schemas"]["CheckinResponse"][];
            "text/json": components["schemas"]["CheckinResponse"][];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
    /**
     * 创建指定的入住记录
     * @description 需要房间管理员及以上的权限
     */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CheckinRequest"];
          "text/json": components["schemas"]["CheckinRequest"];
          "application/*+json": components["schemas"]["CheckinRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["CheckinResponse"];
            "application/json": components["schemas"]["CheckinResponse"];
            "text/json": components["schemas"]["CheckinResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/checkin/{recordId}": {
    /**
     * 列出指定的入住记录
     * @description 需要房间管理员及以上的权限
     */
    get: {
      parameters: {
        path: {
          recordId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CheckinResponse"];
            "application/json": components["schemas"]["CheckinResponse"];
            "text/json": components["schemas"]["CheckinResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
      };
    };
    /**
     * 删除指定的入住记录
     * @description 需要房间管理员及以上的权限
     */
    delete: {
      parameters: {
        path: {
          recordId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
      };
    };
  };
  "/api/manager/revenue": {
    /**
     * 查询酒店的收入趋势
     * @description begin 合法的日期字符串 建议格式为 yyyy-MM-dd
     *
     * end 合法的日期字符串 建议格式为 yyyy-MM-dd
     */
    get: {
      parameters: {
        query?: {
          begin?: string;
          end?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["RevenueTrend"];
            "application/json": components["schemas"]["RevenueTrend"];
            "text/json": components["schemas"]["RevenueTrend"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/room": {
    /**
     * 查询所有的房间
     * @description 登录即可获取
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["RoomResponse"][];
            "application/json": components["schemas"]["RoomResponse"][];
            "text/json": components["schemas"]["RoomResponse"][];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
    /**
     * 创建房间
     * @description 需要超级管理员权限
     */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateRoomRequest"];
          "text/json": components["schemas"]["CreateRoomRequest"];
          "application/*+json": components["schemas"]["CreateRoomRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["RoomResponse"];
            "application/json": components["schemas"]["RoomResponse"];
            "text/json": components["schemas"]["RoomResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/room/{roomId}": {
    /**
     * 列出指定房间的信息
     * @description 登录即可访问
     */
    get: {
      parameters: {
        path: {
          roomId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["RoomResponse"];
            "application/json": components["schemas"]["RoomResponse"];
            "text/json": components["schemas"]["RoomResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
      };
    };
    /**
     * 删除指定的房间
     * @description 需要超级管理员权限
     */
    delete: {
      parameters: {
        path: {
          roomId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
      };
    };
  };
  "/api/test/start": {
    /**
     * 发起测试请求
     * @description caseName: hot | cool
     */
    patch: {
      parameters: {
        query?: {
          caseName?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CheckinResponse"][];
            "application/json": components["schemas"]["CheckinResponse"][];
            "text/json": components["schemas"]["CheckinResponse"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/test/stop": {
    /** 停止正在进行的测试 */
    patch: {
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/test/clear": {
    /**
     * 清除指定测试集造成的影响
     * @description casename : hot | cool
     */
    patch: {
      parameters: {
        query?: {
          caseName?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/time/now": {
    /** 获得当前的系统时间 */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["TimeResponse"];
            "application/json": components["schemas"]["TimeResponse"];
            "text/json": components["schemas"]["TimeResponse"];
          };
        };
      };
    };
  };
  "/api/user/register": {
    /** 注册用户 */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RegisterRequest"];
          "text/json": components["schemas"]["RegisterRequest"];
          "application/*+json": components["schemas"]["RegisterRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
      };
    };
  };
  "/api/user/login": {
    /** 用户登录 */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginRequest"];
          "text/json": components["schemas"]["LoginRequest"];
          "application/*+json": components["schemas"]["LoginRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["LoginResponse"];
            "application/json": components["schemas"]["LoginResponse"];
            "text/json": components["schemas"]["LoginResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
      };
    };
  };
  "/api/user/{userId}": {
    /** 获得用户信息 */
    get: {
      parameters: {
        path: {
          userId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["UserResponse"];
            "application/json": components["schemas"]["UserResponse"];
            "text/json": components["schemas"]["UserResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
      };
    };
    /** 修改用户信息 */
    put: {
      parameters: {
        path: {
          userId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UserResponse"];
          "text/json": components["schemas"]["UserResponse"];
          "application/*+json": components["schemas"]["UserResponse"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["UserResponse"];
            "application/json": components["schemas"]["UserResponse"];
            "text/json": components["schemas"]["UserResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ExceptionMessage"];
            "application/json": components["schemas"]["ExceptionMessage"];
            "text/json": components["schemas"]["ExceptionMessage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
  "/api/user/all": {
    /** 获得所有的用户信息 */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["UserResponse"][];
            "application/json": components["schemas"]["UserResponse"][];
            "text/json": components["schemas"]["UserResponse"][];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AirConditionerOption: {
      /** @description 当前空调系统是制冷还是制热 */
      cooling: boolean;
      /**
       * Format: double
       * @description 当前空调系统的最低温度
       */
      minTemperature: number;
      /**
       * Format: double
       * @description 当前空调系统的最高温度
       */
      maxTemperature: number;
      /**
       * Format: double
       * @description 当前空调系统的默认温度
       */
      defaultTemperature: number;
      defaultFanSpeed: components["schemas"]["FanSpeed"];
      /**
       * Format: double
       * @description 回温之后再次加入工作队列的温差阈值
       */
      temperatureThreshold: number;
      /**
       * Format: double
       * @description 高速风导致温度变化的速度
       * 单位为分每度
       */
      highSpeedPerDegree: number;
      /**
       * Format: double
       * @description 中速风导致温度变化的速度
       * 单位为分每度
       */
      middleSpeedPerDegree: number;
      /**
       * Format: double
       * @description 低速风导致温度变化的速度
       * 单位为分每度
       */
      lowSpeedPerDegree: number;
      /**
       * Format: double
       * @description 回温的速度
       * 单位为度每分
       */
      backSpeed: number;
      /**
       * Format: double
       * @description 每度温度变化的费用
       */
      pricePerDegree?: number;
    };
    AirConditionerRecordResponse: {
      /**
       * Format: int64
       * @description 开始使用的时间
       */
      beginTime: number;
      /**
       * Format: int64
       * @description 结束使用的时间
       */
      endTime: number;
      /**
       * Format: double
       * @description 开始使用时的温度
       */
      beginTemperature: number;
      /**
       * Format: double
       * @description 结束使用时的温度
       */
      endTemperature: number;
      /**
       * Format: double
       * @description 使用空调造成的温度变化量
       */
      temperatureDelta: number;
      /**
       * Format: double
       * @description 当前空调的费用
       * 单位是元每度
       */
      price: number;
      /**
       * Format: double
       * @description 使用空调的费用
       */
      fee: number;
      /** @description 是否结账 */
      checked: boolean;
    };
    AirConditionerRequest: {
      /** @description 开启还是关闭空调 */
      open: boolean;
      /**
       * Format: double
       * @description 要求的目标的温度
       */
      targetTemperature?: number;
      speed?: components["schemas"]["FanSpeed"];
    };
    AirConditionerResponse: {
      /** @description 空调所在房间的ID */
      roomId: string;
      status: components["schemas"]["AirConditionerStatus"];
      /**
       * Format: double
       * @description 房间的当前温度
       */
      temperature: number;
      /** @description 空调是在制冷还是在制热 */
      cooling: boolean;
      /**
       * Format: double
       * @description 空调的目标温度
       * 当空调开启时有效
       */
      targetTemperature: number;
      speed: components["schemas"]["FanSpeed"];
    };
    /**
     * Format: int32
     * @description 空调的状态枚举
     * 0 空调处在关闭状态
     * 1 空调处在等待状态
     * 2 空调处在工作状态
     * @enum {number}
     */
    AirConditionerStatus: 0 | 1 | 2;
    BillResponse: {
      /** @description 当前账单的ID */
      id?: string | null;
      /** @description 结账的用户名 */
      userId: string;
      /**
       * Format: int64
       * @description 入住的开始时间
       */
      beginTime: number;
      /**
       * Format: int64
       * @description 入住的结束时间
       */
      endTime: number;
      /** @description 入住时间段中的入住记录列表 */
      checkinResponses: components["schemas"]["CheckinResponse"][];
      /** @description 入住时间段中的空调使用记录列表 */
      airConditionerRecordResponses: components["schemas"]["AirConditionerRecordResponse"][];
      /**
       * Format: double
       * @description 入住阶段的房费
       */
      roomFee: number;
      /**
       * Format: double
       * @description 入住阶段的空调使用费
       */
      airConditionerFee: number;
    };
    CheckinRequest: {
      /** @description 入住的房间号 */
      roomId: string;
      /** @description 入住的用户ID */
      userId: string;
      /** @description 入住的用户姓名 */
      username: string;
      /**
       * Format: int64
       * @description 入住的时间
       */
      beginTime: number;
      /**
       * Format: int64
       * @description 退房的时间
       */
      endTime: number;
    };
    CheckinResponse: {
      /** @description 入住记录ID */
      checkinId: string;
      /** @description 入住的房间ID */
      roomId: string;
      /** @description 入住的用户ID */
      userId: string;
      /**
       * Format: int64
       * @description 入住时间
       */
      beginTime: number;
      /**
       * Format: int64
       * @description 退房时间
       */
      endTime: number;
      /** @description 是否已经退房 */
      checkout: boolean;
    };
    CreateRoomRequest: {
      /** @description 创建的房间名称 */
      roomName: string;
      /**
       * Format: double
       * @description 房间的单价
       */
      pricePerDay: number;
      /**
       * Format: double
       * @description 房间的基础环境温度
       */
      roomBasicTemperature: number;
    };
    DailyRevenue: {
      /**
       * Format: date-time
       * @description 当天的时间
       */
      day: string;
      /**
       * Format: double
       * @description 当天的房费收入
       */
      roomRevenue: number;
      /**
       * Format: double
       * @description 当天的空调收入
       */
      airConditionerRevenue: number;
    };
    /** @description 错误信息传输类 */
    ExceptionMessage: {
      /** @description 错误信息 */
      message: string;
    };
    /**
     * Format: int32
     * @description 风速的选项
     * 0 低速风
     * 1 中速风
     * 2 高速风
     * @enum {number}
     */
    FanSpeed: 0 | 1 | 2;
    /** @description 用户登录请求的传输类 */
    LoginRequest: {
      /** @description 需要登录的用户ID */
      id: string;
      /** @description 登录用户的密码 */
      password: string;
    };
    /** @description 用户登录信息的传输类 */
    LoginResponse: {
      /** @description 登录成功之后生成的令牌 */
      token: string;
    };
    /** @description 用户权限信息的传输类 */
    PermissionResponse: {
      /** @description 用户是否为超级管理员 */
      sudo: boolean;
      /** @description 用户是否为客房管理员 */
      roomAdmin: boolean;
      /** @description 用户是否为空调管理员 */
      airconAdmin: boolean;
      /** @description 用户是否为账单管理员 */
      billAdmin: boolean;
    };
    ProblemDetails: {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
      [key: string]: unknown;
    };
    /** @description 注册的请求信息传输类 */
    RegisterRequest: {
      /** @description 用户ID */
      id: string;
      /** @description 用户名 */
      name: string;
      /** @description 用户密码 */
      password: string;
    };
    RevenueTrend: {
      /**
       * Format: int32
       * @description 酒店当前的总住户数
       */
      totalUsers: number;
      /**
       * Format: int32
       * @description 酒店当前的总入住数
       */
      totalCheckin: number;
      /** @description 酒店按天的收入变化 */
      dailyRevenues: components["schemas"]["DailyRevenue"][];
    };
    /** @description 房间传输类 */
    RoomResponse: {
      /** @description 房间的ID */
      roomId: string;
      /** @description 房间的名称 */
      roomName: string;
      /**
       * Format: double
       * @description 房间的单价
       */
      pricePerDay: number;
      /**
       * Format: double
       * @description 房间的基础环境温度
       */
      roomBaiscTemperature: number;
      airConditioner: components["schemas"]["AirConditionerResponse"];
      checkinStatus?: components["schemas"]["CheckinResponse"];
    };
    TimeResponse: {
      /**
       * Format: int64
       * @description 当前的系统时间
       */
      now: number;
    };
    /** @description 用户信息传输类 */
    UserResponse: {
      /** @description 用户ID */
      id: string;
      /** @description 用户名 */
      name: string;
      auth: components["schemas"]["PermissionResponse"];
      checkin?: components["schemas"]["CheckinResponse"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
